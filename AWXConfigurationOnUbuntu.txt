Install ansible awx on ubuntu 18.04 linux

AWX allows you to centrally manage Ansible playbooks, inventories, Secrets, and scheduled jobs from a web interface. It is easy to install AWX on Ubuntu 18.04 (Bionic Beaver) Linux system. Use the steps shared below to install and configure Ansible AWX on Ubuntu 18.04 Linux server.

Setup minimum requirements
Ubuntu 18.04 LTS Server
At least 4GB of RAM – More is better
2vcpus – Pump more if you have
10GB free disk storage
root or user with sudo for ssh

Step 1: Update Ubuntu system
Update and upgrade your system

sudo apt update && sudo apt -y upgrade
sudo reboot

Step 2: Install Ansible on Ubuntu
Install the latest release of Ansible using the commands below.

echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu bionic main" | sudo tee /etc/apt/sources.list.d/ansible.list

sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367

sudo apt update
sudo apt install -y ansible

Use the command below to check your Ansible version.
ansible --version

Install Docker and Docker Compose

Ansible AWX services will run as docker containers. We need Docker Engine to power the environment.
Install Docker on Ubuntu 18.04

Step 1: Update System
sudo apt -y update

Step 2: Install basic dependencies
There are few dependencies we need to configure Docker repositories and do the actual package installation. Install them by firing the following commands in your terminal.

sudo apt -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common

Step 3: Install Docker CE on Ubuntu 18.04/19.04/16.04
If you have older versions of Docker, remove it and its dependent packages.

sudo apt remove docker docker-engine docker.io containerd runc

Import Docker repository GPG key:

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

Add Docker CE repository to Ubuntu:
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

Finally install Docker CE on Ubuntu 18.04/19.04/16.04:
sudo apt update
sudo apt -y install docker-ce docker-ce-cli containerd.io

Add your user account to docker group.
sudo usermod -aG docker $USER
newgrp docker

Verify installation by checking Docker version:
$ docker version

Install Latest Docker Compose on Ubuntu 18.04 / CentOS 8 / Debian 10 / Fedora 30

Compose is a tool for defining and running multi-container Docker application. A YAML file is used to configure your application’s services.

Install Latest Docker Compose on Linux

You need curl installed on your system for this operation. And definitely, access to the Terminal as a user with sudo privileges.

sudo apt install -y curl

Once curl has been installed, download the latest Compose on your Linux machine.

curl -s https://api.github.com/repos/docker/compose/releases/latest \
  | grep browser_download_url \
  | grep docker-compose-Linux-x86_64 \
  | cut -d '"' -f 4 \
  | wget -qi -


Make the binary file executable.
chmod +x docker-compose-Linux-x86_64

Move the file to your PATH.

sudo mv docker-compose-Linux-x86_64 /usr/local/bin/docker-compose

Confirm version.
docker-compose version

Configure Compose Command-line completion

Compose has command completion for the bash and zsh shell.


For Bash users

Place the completion script in /etc/bash_completion.d/.

sudo curl -L https://raw.githubusercontent.com/docker/compose/master/contrib/completion/bash/docker-compose -o /etc/bash_completion.d/docker-compose

Source the file or re-login to enjoy completion feature.
source /etc/bash_completion.d/docker-compose

Test Docker Compose installation.
Our comprehensive guide is on Managing Docker Containers with Docker Compose

Create a test Docker Compose file.
vim docker-compose.yml

Add below data to the file.

version: '3'
services:
  web:
    image: nginx:latest
    ports:
     - "8080:80"
    links:
     - php
  php:
    image: php:7-fpm

Start service containers.
docker-compose up -d

Show running Containers
docker-compose ps

Destroy containers
docker-compose stop
docker-compose rm –f

Step 4: Install Node and NPM
Install Node.js and NPM on your Ubuntu system.

sudo apt install -y nodejs npm
sudo npm install npm --global

Step 5: Install Ansible AWX on Ubuntu 18.04
Install docker-py python module by executing below commands in your terminal.

sudo apt -y install python-pip git pwgen vim
pip install requests==2.14.2

Install docker-compose module which matches your Docker Compose version.

docker-compose version
pip install docker-compose==1.24.1

Clone AWX source code from GitHub using the git command.

sudo su -
git clone --depth 50 https://github.com/ansible/awx.git

Change to the AWX installer directory
Since you need to execute ansible playbooks under installer directory, first navigate to this directory.

$pwgen -N 1 -s 30
cd awx/installer/

Check the inventory file in the awx directory, you can customize as you want:

nano inventory

Modify inventory file with correct settings for your setup. Minimal settings:

dockerhub_base=ansible
awx_task_hostname=awx
awx_web_hostname=awxweb
postgres_data_dir=/awxpro/pgdocker
host_port=80
host_port_ssl=443
docker_compose_dir=/awxpro/awxcompose
pg_username=awx
pg_password=awxpass
pg_database=awx
pg_port=5432
rabbitmq_password=awxpass
rabbitmq_erlang_cookie=cookiemonster
admin_user=admin
admin_password=StrongAdminpassword
create_preload_data=True
secret_key=2fCkx2K5GnIjBz4OterhOC3ey0WPdj

Execute playbook
Run ansible-playbook command followed by option -i which tells it the inventory file to use. The name of the playbook file is install.yml.

ansible-playbook -i inventory install.yml

Installation output, check if you got any error messages.

Use the docker ps command to get a list of running containers.

Step 6: Access Ansible AWX Dashboard
The web portal is accessible via hostip_or_hostname:8000 or port 80 if you didn’t change it. You will get a welcome dashboard similar to one below.

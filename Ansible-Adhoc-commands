Running Ansible Ad Hoc Command

We can perform the some small tasks using ansible ad hoc command rather than playbook.

You can run the command the against server using modules -m <module name> and optionaly run arguments -a "OPTION args"

Simple Modules in Ansible

Service Module Ansible:
ansible  Linuxservers  -m yum -a "name=httpd state=latest" --become -u ansible
ansible  Linuxservers  -m yum -a "name=httpd state=present" --become -u ansible
ansible  Linuxservers  -m service -a "name=httpd state=started enabled=yes" --become -u ansible
ansible  Linuxservers  -m service -a "name=httpd state=stopped enabled=no" --become -u ansible
ansible  Linuxservers  -m service -a "name=httpd state=restarted" --become -u ansible

Shell Module:
ansible all -m ping
ansible  Linuxservers  -m shell -a "df -Th"
ansible  Linuxservers  -m shell -a "uptime"
ansible dbservers -a "/sbin/shutdown -r now" --become -u ansible
ansible all -m shell -a "free -m" 
ansible all -m shell -a "hostname"

Copy Module:
ansible  Linuxservers  -m copy -a " src=/src_path_name dest=/destination_path_name" 

Fetch Module:
ansible Linuxservers -m fetch -a "src=/tmp/ansibletest.txt dest=/home/ansible"

User Module
ansible all -m user -a "name=user1 password=user1" --become
ansible all  -m shell -a "cat /etc/passwd | grep user1"

File Module
ansible all -m file -a "dest=/home/ansible/ansiblefilemodule.txt state=touch mode=600 owner=ansible group=ansible" 
ansible all -m file -a "dest=/home/ansible/ansibleshelldir state=directory"
ansible Linuxservers -m file -a "dest=/home/ansible/ansiblefilemodule.txt state=absent"
ansible all -m shell -a "ls -lrt"
